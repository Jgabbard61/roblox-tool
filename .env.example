
# ============================================
# DATABASE CONFIGURATION
# ============================================
# PostgreSQL connection string
# Format: postgresql://username:password@host:port/database
# Example for local: postgresql://postgres:password@localhost:5432/roblox_verifier
# Example for cloud: postgresql://user:pass@host.provider.com:5432/dbname
DATABASE_URL=postgresql://username:password@localhost:5432/roblox_verifier

# ============================================
# NEXTAUTH CONFIGURATION
# ============================================
# Secret key for encrypting JWT tokens
# Generate with: openssl rand -base64 32
NEXTAUTH_SECRET=your-super-secret-key-here-change-this

# NextAuth URL (your application URL)
NEXTAUTH_URL=http://localhost:3000

# ============================================
# REDIS CONFIGURATION (if using Redis for rate limiting)
# ============================================
REDIS_URL=redis://localhost:6379

# ============================================
# APPLICATION CONFIGURATION
# ============================================
NODE_ENV=development

# ============================================
# SUPABASE STORAGE CONFIGURATION
# ============================================
# Get these from your Supabase project settings
NEXT_PUBLIC_SUPABASE_URL=your-supabase-project-url
NEXT_PUBLIC_SUPABASE_ANON_KEY=your-supabase-anon-key
SUPABASE_SERVICE_ROLE_KEY=your-supabase-service-role-key
SUPABASE_STORAGE_BUCKET=customer-logos

# ============================================
# STRIPE PAYMENT CONFIGURATION (Phase 2)
# ============================================
# Get these from your Stripe Dashboard
# Test keys start with sk_test_ and pk_test_
# Production keys start with sk_live_ and pk_live_
STRIPE_SECRET_KEY=sk_test_your_secret_key_here
STRIPE_PUBLISHABLE_KEY=pk_test_your_publishable_key_here
STRIPE_WEBHOOK_SECRET=whsec_your_webhook_secret_here

# ============================================
# VERCEL CONFIGURATION (Optional - for deployment)
# ============================================
# VERCEL_OIDC_TOKEN will be set automatically by Vercel
